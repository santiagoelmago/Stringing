version: '3'

services:
  database:
    container_name: database
    image: postgres:latest
    restart: always
    env_file:
      .env
    volumes:
      - database-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - webapp
  pgweb:
    container_name: pgweb
    restart: always
    image: sosedoff/pgweb
    ports:
      - 8081:8081
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/postgres?sslmode=disable
    depends_on:
      database:
        condition: service_healthy
    networks:
      - webapp
  server:
    container_name: server
    restart: always
    image: stringing/server
    build: ./web
    env_file:
      .env
    environment:
      - DATABASE_CONTAINER=database
      - FLASK_ENV=development
      - PORT=5000
      - DEBUG=True
    volumes:
      - ./web:/app
    ports:
      - 5000:5000
    depends_on:
      database:
        condition: service_healthy
    networks:
    - webapp
networks:
  webapp:
volumes:
  database-data: